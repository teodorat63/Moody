// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  moods     Mood[]     @relation("UserMoods")
  playlists Playlist[] @relation("UserPlaylists")
  createdAt DateTime   @default(now())
}

model Mood {
  id        Int        @id @default(autoincrement())
  moodType  String // Example: "Happy", "Sad", "Relaxed"
  user      User       @relation(fields: [userId], references: [id], name: "UserMoods")
  userId    Int
  createdAt DateTime   @default(now())
  Playlist  Playlist[] @relation(name: "MoodPlaylists")
}

model Playlist {
  id        Int      @id @default(autoincrement())
  name      String
  mood      Mood?    @relation(fields: [moodId], references: [id], name: "MoodPlaylists")
  moodId    Int?
  user      User     @relation(fields: [userId], references: [id], name: "UserPlaylists")
  userId    Int
  songs     Song[]   @relation("PlaylistSongs")
  createdAt DateTime @default(now())
}

model Song {
  id         Int      @id @default(autoincrement())
  title      String
  artist     String
  url        String // YouTube link
  playlist   Playlist @relation(fields: [playlistId], references: [id], name: "PlaylistSongs")
  playlistId Int
  createdAt  DateTime @default(now())
}
